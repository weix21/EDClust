print(table(Truth,Predicted))
return(Predicted)
}
load("/Users/weixin/Hskin.RData")
load("/Users/weixin/Downloads/polya/mine/writing/Hskin_tsne.RData")
#tsne_plot <- data.frame(x = res$Y[,1], y = res$Y[,2], ID = annot_all_notna)
tsne_plot$ID = annot_all_notna
tsne_plot$Methods = "Ground Truth"
ELabel=read.table("/Users/weixin/Downloads/polya/mine/realdata/EMMM1/data/Hskin/Initial2/result9/Label.txt")
tsne_plot2=tsne_plot
tsne_plot2$ID=Map_Pre_to_Tru(annot_all_notna,ELabel$V2)
tsne_plot2$Methods = "EDClust (ARI=0.94)"
load("/Users/weixin/Downloads/polya/mine/realdata/Harmony/HSC3/data4/Hskin/result3/H_Label.RData")
tsne_plot3=tsne_plot
tsne_plot3$ID=Map_Pre_to_Tru(annot_all_notna,ELabel[[3]])
tsne_plot3$Methods = "H + SC3 (ARI=0.83)"
load("/Users/weixin/Downloads/polya/mine/realdata/BAMM/data3/Hskin/BAMMSC_NMretina.RData")
tsne_plot4=tsne_plot
tsne_plot4$ID=Map_Pre_to_Tru(annot_all_notna,unlist(result$mem))
tsne_plot4$Methods = "BAMM-SC (ARI=0.79)"
data=rbind(tsne_plot,tsne_plot2,tsne_plot3,tsne_plot4)
data$Methods = factor(data$Methods,
levels=c("Ground Truth","EDClust (ARI=0.94)","BAMM-SC (ARI=0.79)","H + SC3 (ARI=0.83)"))
p <- ggplot(data) + geom_point(aes(x=x, y=y, color=ID),size=1)+
facet_wrap(~ Methods,nrow=2)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),axis.line = element_line(colour = "black")) +
#scale_color_manual(labels = c("1", "2","3","4","5","6","7","8"),values = mycolor) +
theme(legend.title=element_text(size=20,face = "bold"), legend.text=element_text(size=18, face = "plain"),
axis.title.x=element_text(size=20, face = "bold"),
title=element_text(size=20,face = "bold"),
strip.text.x = element_text(size = 17, face = "bold"))+
labs(x="TSNE.1",y = "TSNE.2",color="Cell types")+
guides(colour = guide_legend(override.aes = list(size=5)))
a1=p
load("/Users/weixin/Mlung.RData")
load("/Users/weixin/Downloads/polya/mine/writing/Mlung_tsne.RData")
#tsne_plot <- data.frame(x = res$Y[,1], y = res$Y[,2], ID = annot_all_notna)
tsne_plot$ID = annot_all_notna
tsne_plot$Methods = "Ground Truth"
ELabel=read.table("/Users/weixin/Downloads/polya/mine/realdata/EMMM1/data/Mlung/Initial2/result1/Label.txt")
tsne_plot2=tsne_plot
tsne_plot2$ID=Map_Pre_to_Tru(annot_all_notna,ELabel$V3)
tsne_plot2$Methods = "EDClust (ARI=0.73)"
load("/Users/weixin/Downloads/polya/mine/realdata/Harmony/HSC3/data4/Mlung/result6/H_Label.RData")
tsne_plot3=tsne_plot
tsne_plot3$ID=Map_Pre_to_Tru(annot_all_notna,ELabel[[2]])
tsne_plot3$Methods = "H + SC3 (ARI=0.77)"
load("/Users/weixin/Downloads/polya/mine/realdata/BAMM/data3/Mlung/result8/BAMMSC_NMretina.RData")
tsne_plot4=tsne_plot
tsne_plot4$ID=Map_Pre_to_Tru(annot_all_notna,unlist(result$mem))
tsne_plot4$Methods = "BAMM-SC (ARI=0.74)"
data=rbind(tsne_plot,tsne_plot2,tsne_plot3,tsne_plot4)
data$Methods = factor(data$Methods,
levels=c("Ground Truth","EDClust (ARI=0.73)","BAMM-SC (ARI=0.74)","H + SC3 (ARI=0.77)"))
p <- ggplot(data) + geom_point(aes(x=x, y=y, color=ID),size=1)+
facet_wrap(~ Methods,nrow=2)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),axis.line = element_line(colour = "black")) +
#scale_color_manual(labels = c("1", "2","3","4","5","6","7","8"),values = mycolor) +
theme(legend.title=element_text(size=20,face = "bold"), legend.text=element_text(size=18, face = "plain"),
axis.title.x=element_text(size=20, face = "bold"),
title=element_text(size=20,face = "bold"),
strip.text.x = element_text(size = 17, face = "bold") )+
labs(x="TSNE.1",y = "TSNE.2",color="Cell types")+
guides(colour = guide_legend(override.aes = list(size=5)))
a2=p
load("/Users/weixin/BaronPancrea.RData")
load("/Users/weixin/Downloads/polya/mine/writing/baron_tsne.RData")
#tsne_plot <- data.frame(x = res$Y[,1], y = res$Y[,2], ID = annot_all_notna)
tsne_plot$ID = annot_all_notna
tsne_plot$Methods = "Ground Truth"
ELabel=read.table("/Users/weixin/Downloads/polya/mine/realdata/EMMM1/data/baron/Initial2/result2/Label.txt")
tsne_plot2=tsne_plot
tsne_plot2$ID=Map_Pre_to_Tru(annot_all_notna,ELabel$V3)
tsne_plot2$Methods = "EDClust (ARI=0.81)"
load("/Users/weixin/Downloads/polya/mine/realdata/Harmony/HSC3/data4/baron/result1/H_Label.RData")
tsne_plot3=tsne_plot
tsne_plot3$ID=Map_Pre_to_Tru(annot_all_notna,ELabel[[5]])
tsne_plot3$Methods = "H + SC3 (ARI=0.58)"
load("/Users/weixin/Downloads/polya/mine/realdata/BAMM/data3/baron/BAMMSC_NMretina.RData")
tsne_plot4=tsne_plot
tsne_plot4$ID=Map_Pre_to_Tru(annot_all_notna,unlist(result$mem))
tsne_plot4$Methods = "BAMM-SC (ARI=0.66)"
data=rbind(tsne_plot,tsne_plot2,tsne_plot3,tsne_plot4)
data$Methods = factor(data$Methods,
levels=c("Ground Truth","EDClust (ARI=0.81)","BAMM-SC (ARI=0.66)","H + SC3 (ARI=0.58)"))
p <- ggplot(data) + geom_point(aes(x=x, y=y, color=ID),size=1)+
facet_wrap(~ Methods,nrow=2)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),axis.line = element_line(colour = "black")) +
#scale_color_manual(labels = c("1", "2","3","4","5","6","7","8"),values = mycolor) +
theme(legend.title=element_text(size=20,face = "bold"), legend.text=element_text(size=18, face = "plain"),
axis.title.x=element_text(size=20, face = "bold"),
title=element_text(size=20,face = "bold"),
strip.text.x = element_text(size = 17, face = "bold") )+
labs(x="TSNE.1",y = "TSNE.2",color="Cell types")+
guides(colour = guide_legend(override.aes = list(size=5)))
a3=p
load("/Users/weixin/MouseRetina.RData")
load("/Users/weixin/Downloads/polya/mine/writing/NMretina_tsne.RData")
#tsne_plot <- data.frame(x = res$Y[,1], y = res$Y[,2], ID = annot_all_notna)
tsne_plot <- data.frame(x = res$Y[,1], y = res$Y[,2], ID = annot_all_notna)
tsne_plot$Methods = "Ground Truth"
ELabel=read.table("/Users/weixin/Downloads/polya/mine/realdata/EMMM1/data/NMretina/Initial2/result8/Label.txt")
tsne_plot2=tsne_plot
tsne_plot2$ID=Map_Pre_to_Tru(annot_all_notna,ELabel$V2)
tsne_plot2$Methods = "EDClust (ARI=0.88)"
load("/Users/weixin/Downloads/polya/mine/realdata/Harmony/HSC3/data4/NMretina/result1/H_Label.RData")
tsne_plot3=tsne_plot
tsne_plot3$ID=Map_Pre_to_Tru(annot_all_notna,ELabel[[2]])
tsne_plot3$Methods = "H + SC3 (ARI=0.69)"
load("/Users/weixin/Downloads/polya/mine/realdata/BAMM/data3/Nmretina/BAMMSC_NMretina.RData")
tsne_plot4=tsne_plot
tsne_plot4$ID=Map_Pre_to_Tru(annot_all_notna,unlist(result$mem))
tsne_plot4$Methods = "BAMM-SC (ARI=0.43)"
data=rbind(tsne_plot,tsne_plot2,tsne_plot3,tsne_plot4)
data$Methods = factor(data$Methods,
levels=c("Ground Truth","EDClust (ARI=0.88)","BAMM-SC (ARI=0.43)","H + SC3 (ARI=0.69)"))
p <- ggplot(data) + geom_point(aes(x=x, y=y, color=ID),size=1)+
facet_wrap(~ Methods,nrow=2)+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),axis.line = element_line(colour = "black")) +
#scale_color_manual(labels = c("1", "2","3","4","5","6","7","8"),values = mycolor) +
theme(legend.title=element_text(size=20,face = "bold"), legend.text=element_text(size=18, face = "plain"),
axis.title.x=element_text(size=20, face = "bold"),
title=element_text(size=20,face = "bold"),
strip.text.x = element_text(size = 17, face = "bold") )+
labs(x="TSNE.1",y = "TSNE.2",color="Cell types")+
guides(colour = guide_legend(override.aes = list(size=5)))
a4=p
ggarrange(a1, a2, a3, a4
ncol = 2, nrow = 2,#heights=c(2,2,2),
common.legend = TRUE, legend = "top",
labels=c("a","b"),font.label = list(size = 16))
ggarrange(a1, a2, a3, a4,
ncol = 2, nrow = 2,#heights=c(2,2,2),
labels=c("a","b"),font.label = list(size = 16))
library(ggpubr)
ggarrange(a1, a2, a3, a4,
ncol = 2, nrow = 2#heights=c(2,2,2))
)
ï¼Ÿlayout_matrix
?layout_matrix
?ggarrange
require(grid)
grid.newpage()
pushViewport(viewport(layout = grid.layout(2,2)))
vplayout <- function(x,y){viewport(layout.pos.row = x, layout.pos.col = y)}
print(a1, vp = vplayout(1,1))
print(a2, vp = vplayout(1,2))
print(a3, vp = vplayout(2,1))
print(a4, vp = vplayout(2,2))
ggarrange(a1, a2, a3, a4,
ncol = 1, nrow = 4#heights=c(2,2,2))
)
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Hskin/result1/Harmony_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Hskin/result2/Harmony_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result1/Harmony_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result1/Harmony_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result1/Harmony_time.RData")
View(t)
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result2/Harmony_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Hskin/result1/Harmony_time.RData")
mean(unlist(t))
mean(t)
mean(unlist(t))
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Mlung/result1/Harmony_time.RData")
mean(unlist(t9))
mean(unlist(t))
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result1/Harmony_time.RData")
mean(unlist(t))
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result1/HSC3_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Mlung/result1/HSC3_time.RData")
mean(unlist(SC3))
mean(unlist(t_SC3))
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Mlung/result2/HSC3_time.RData")
mean(unlist(t_SC3))
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Hskin/result1/HSC3_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Hskin/result2/HSC3_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result1/HSC3_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result1/HSC3_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result2/HSeurat_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result2/HTSCAN_time.RData")
mean(unlist(t_TSCAN))
mean(unlist(t_TSCAN))/60
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result2/HSeurat_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Nmretina/result2/HTSCAN_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/Mlung/result1/HTSCAN_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result1/HSeurat_time.RData")
load("/Users/weixin/Downloads/polya/mine/methods/Compute time/Harmony/runtime/data/baron/result1/HTSCAN_time.RData")
load("/Users/weixin/BAMMSC_time.RData")
View(t_BAMM)
load("/Users/weixin/BAMMSC_time.RData")
View(t_BAMM)
load("/Users/weixin/DIMMSC_time.RData")
View(t_DIMM)
a=read.table("/Users/weixin/OLabel.txt")
b=read.table("/Users/weixin/PLabel.txt")
library(mclust)
adjustedRandIndex(a$V1,b$V1)
table(a$V1,b$V1)
b=read.table("/Users/weixin/PLabel.txt")
adjustedRandIndex(a$V1,b$V1)
b=read.table("/Users/weixin/PLabel.txt")
adjustedRandIndex(a$V1,b$V1)
b=read.table("/Users/weixin/PLabel.txt")
adjustedRandIndex(a$V1,b$V1)
b=read.table("/Users/weixin/PLabel.txt")
adjustedRandIndex(a$V1,b$V1)
b=read.table("/Users/weixin/PLabel.txt")
adjustedRandIndex(a$V1,b$V1)
library(JuliaCall)
install_julia()
julia<-julia_setup()
julia<-julia_setup()
julia_setup()
install_julia()
install_julia()
library(JuliaCall)
julia=julia_setup(JULIA_HOME = "/Users")
library(JuliaCall)
julia=julia_setup(JULIA_HOME = "/Users/weixin")
install_julia <- function(path){
## `RCall` needs to be precompiled with the current R.
julia=julia_setup(JULIA_HOME = path)
}
install_julia <- function(path){
## `RCall` needs to be precompiled with the current R.
julia=julia_setup(JULIA_HOME = path)
return(julia)}
julia=install_julia("/Users/weixin")
View(julia)
julia_eval("sqrt(2)")
install_julia <- function(path){
## `RCall` needs to be precompiled with the current R.
julia=julia_setup(JULIA_HOME = path)
return(julia)
}
julia=install_julia("/Users/weixin")
library(JuliaCall)
setup_julia <- function(path){
## `RCall` needs to be precompiled with the current R.
julia=julia_setup(JULIA_HOME = path)
return(julia)
}
julia=setup_julia("/Users/weixin")
View(install_julia)
julia_eval("sqrt(2)")
library(JuliaCall)
julia <- JuliaCall::julia_setup(installJulia=TRUE,...)
julia <- JuliaCall::julia_setup(installJulia=TRUE)
install.packages("JuliaConnectoR")
library(JuliaConnectoR)
juliaEval("sqrt(2)")
juliaImport(Distributions)
juliaImport("Distributions")
juliaImport("SpecialFunctions")
juliaImport("StatsBase")
?juliaFun
library(devtools)
install_github("weix21/EDClust")
library(EDClust)
data(Mlung_sub)
data(Mlung_sub)
force(annot_all_notna)
force(count_all_notna)
force(sample_all_notna)
data(Mlung_sub)
ulia <- setup_julia(path = "/Users/weixin")
library(devtools)
install_github("weix21/EDClust")
data(Mlung_sub)
data("Mlung_sub")
library(EDClust)
data("Mlung_sub")
julia <- setup_julia(path = "/Users/weixin")
alpha_0 <- InitVal_S(count_all_notna, subject_all_notna, Ncluster = 6, ID = 1)
result <- FitPolya(count_all_notna, subject_all_notna, alpha_0)
library'89'
library(mclust)
adjustedRandIndex(result$mem,annot_all_notna)
install.packages("BiocStyle")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocStyle")
library(JuliaCall)
julia=julia_setup(JULIA_HOME = "/Users/weixin")
julia$install_package_if_needed("EDClust")
julia$install_package_if_needed("Distributions")
julia$install_package_if_needed("MixedModels")
julia$installed_package(""MixedModels"")
julia$installed_package("MixedModels")
julia$installed_package("EDClust")
julia$installed_package("FixedEffectModels")
library(devtools)
install_github("weix21/EDClust")
library(EDClust)
julia <- setup_julia(path = "/Users/weixin")
data("Mlung_sub")
alpha_0 <- InitVal_S(count_all_notna, subject_all_notna, Ncluster = 6, ID = 1, seed=2345)
result <- FitPolya(count_all_notna, subject_all_notna, alpha_0)
library(mclust)
adjustedRandIndex(result$mem, annot_all_notna)
library(FEAST)
vignette("FEAST")
vignette("introduction")
library(devtools)
install_github("weix21/EDClust")
library(EDClust)
vignette("EDClust")
library(devtools)
install_github("weix21/EDClust"ï¼Œbuild_vignettes = TRUE)
install_github("weix21/EDClust",build_vignettes = TRUE)
install_github("weix21/EDClust",build_vignettes = TRUE,force=TRUE)
library(EDClust)
vignette(EDClust)
vignette("EDClust")
library(devtools)
install_github("weix21/EDClust", build_vignettes = TRUE)
library(EDClust)
?EDClust
help(EDClust)
help("EDClust")
??EDClust
?install.packages
library(devtools)
?devtools
?rowSums
?rowMeans
?txtProgressBar
?library
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1043_to_1085/F-test_1000_on_train/F-test_features.txt")
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1043_to_1085/F-test_1000_on_train/F-test_features.txt")
identical(F1,F2)
View(F1)
View(F2)
F3=intersect(F1,F2)
F3=intersect(F1$LYZ,F2$LYZ)
identical(F1$LYZ,F2$LYZ)
identical(F1$LYZ,F3)
identical(F2$LYZ,F3)
View(F1)
View(F2)
F2$X=F3
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1079_to_1085/F-test_1000_on_train/F-test_features.txt")
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1079_to_1085/F-test_1000_on_train/F-test_features.txt")
identical(F1$GNLY,F2$GNLY)
F3=intersect(F1$GNLY,F2$GNLY)
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1154_to_1085/F-test_1000_on_train/F-test_features.txt")
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1154_to_1085/F-test_1000_on_train/F-test_features.txt")
identical(F1$GNLY,F2$GNLY)
F3=intersect(F1$GNLY,F2$GNLY)
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1154_to_1085/F-test_1000_on_train/F-test_features.txt")
F3=intersect(F1$LY6G6F,F2$LYZ)
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1249_to_1085/F-test_1000_on_train/F-test_features.txt")
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1249_to_1085/F-test_1000_on_train/F-test_features.txt")
F3=intersect(F1$LYZ,F2$LYZ)
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1249_to_1085/F-test_1000_on_train/features.txt")
F2=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1249_to_1085/F-test_1000_on_train/features.txt")
identical(F1$ABHD17A,F2$ABHD17A)
install.packages("anndata")
library(anndata)
ad <- read_h5ad("/Users/weixin/result/result_PBMC_batch1_ind_1043_to_1085/F-test_1000_on_train/test_adata.h5ad")
ad
View(ad)
ad2 <- read_h5ad("/Users/weixin/result/result_PBMC_batch1_ind_1043_to_1085/F-test_1000_on_train/train_adata.h5ad")
View(ad2)
label=read.csv("/Users/weixin/Downloads/scRNA-seq_celltyping_reference-main/results/PBMC_individual_prediction/PBMC_IndividualEffect/result_PBMC_batch1_ind_1043_to_1085/F-test_1000_on_train/MLP_predicted_obs.csv")
ad$label=label$pred_celltypes
Raw(ad)
a= Raw(ad)
ad$X
View(ad$X)
View(sort(ad$X))
a=ad$X
View(a)
View(label)
View(a)
rownames(label,label$X)
View(label)
?rownames
rownames(label) <- label$X
b=megre(a,label$pred_celltypes)
b=merge(a,label$pred_celltypes)
View(b)
b=0
b=merge(a,label$pred_celltypes,by='row.names',all=TRUE)
View(b)
View(label)
b=label$pred_celltypes
b=label[,15]
View(b)
rownames(b) <- label$X
View(label)
b=as.data.frame(label$pred_celltypes)
View(b)
rownames(b) <- label$X
colnames(b) <- "label"
c=merge(a,b,by='row.names',all=TRUE)
View(c)
d=c[,-2:692]
d=c[,-2:-692]
d
View(d)
?scale
mt <- matrix(c(1:9), ncol = 3)
mts =scale(mt)
View(mt)
View(mts)
install.packages("konverter")
BiocManager::install("zellkonverter")
library(zellkonverter)
library(scRNAseq)
BiocManager::install("scRNAseq")
library(basilisk)
library(scRNAseq)
test=AnnData2SCE(ad)
zellkonverter::AnnData2SCE(ad)
library('devtools')
install_github('andreacirilloac/updateR')
updateR(admin_password = '542436')
library(updateR)
updateR(admin_password = '542436')
updateR(admin_password = "542436")
?updateR
updateR()
library("devtools")
updateR()
BiocManager::install("zellkonverter")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("zellkonverter")
BiocManager::install(version = '3.13')
BiocManager::install(version = '3.13')
BiocManager::install("zellkonverter")
BiocManager::install("zellkonverter",force=TRUE)
F1=read.csv("/Users/weixin/result/result_PBMC_batch1_ind_1249_to_1085/F-test_1000_on_train/features.txt")
library(anndata)
install.packages("anndata")
library(anndata)
remove.packages(anndata)
remove.packages("anndata"
)
install.packages("anndata")
remove.packages(pkgs, lib)
.libPaths()
install.packages("Rcpp")
install.packages("anndata")
install.packages("Rcpp", repos="https://rcppcore.github.io/drat")
install.packages("anndata")
library(ggplot2)
library(rliger)
?louvainCluster
library(rliger)
load("/Users/weixin/Downloads/research/Emory/EDClust/mine/methods/data/Mlung/Mlung.RData")
countlist <- list()
NSubject=length(unique(sample))
for(i in 1:NSubject) {
countlist[[i]] <- count_all_notna[, sample == i]
}
names(countlist) <- 1:NSubject
ifnb_liger <- createLiger(countlist)
ifnb_liger <- normalize(ifnb_liger)
ifnb_liger <- selectGenes(ifnb_liger)
ifnb_liger <- scaleNotCenter(ifnb_liger)
K=length(unique(label))
ifnb_liger <- optimizeALS(ifnb_liger, k = K)
ifnb_liger <- quantile_norm(ifnb_liger)
liger_clusters <- ifnb_liger@clusters
ifnb_liger2 <- louvainCluster(ifnb_liger, resolution = 1)
ifnb_liger2 <- louvainCluster(ifnb_liger, resolution = 1, k=K)
ARI = adjustedRandIndex(annot_all_notna,liger_clusters)
library(mclust)
ARI = adjustedRandIndex(annot_all_notna,liger_clusters)
ARI
ARI = adjustedRandIndex(annot_all_notna,ifnb_liger2@clusters)
ARI
ifnb_liger2@clusters
ï¼Ÿquantile_norm
?quantile_norm
ifnb_liger <- createLiger(countlist)
ifnb_liger <- normalize(ifnb_liger)
ifnb_liger <- selectGenes(ifnb_liger)
ifnb_liger <- scaleNotCenter(ifnb_liger)
K=length(unique(label))
ifnb_liger <- optimizeALS(ifnb_liger, k = K)
ifnb_liger <- quantile_norm(ifnb_liger,rand.seed = 5543)
liger_clusters <- ifnb_liger@clusters
adjustedRandIndex(annot_all_notna,liger_clusters)
?optimizeALS
ifnb_liger <- createLiger(countlist)
ifnb_liger <- normalize(ifnb_liger)
ifnb_liger <- selectGenes(ifnb_liger)
ifnb_liger <- scaleNotCenter(ifnb_liger)
K=length(unique(label))
ifnb_liger <- optimizeALS(ifnb_liger, k = K,rand.seed = 1231)
ifnb_liger <- quantile_norm(ifnb_liger)
liger_clusters <- ifnb_liger@clusters
ARI = adjustedRandIndex(annot_all_notna,liger_clusters)
ARI
ifnb_liger <- louvainCluster(ifnb_liger, resolution = 1)
liger_clusters <- ifnb_liger@clusters
adjustedRandIndex(annot_all_notna,liger_clusters)
?install.packages
getwd()
setwd("/Users/weixin/Documents/GitHub/EDClust")
roxygen2::roxygenize(package.dir = ".")
